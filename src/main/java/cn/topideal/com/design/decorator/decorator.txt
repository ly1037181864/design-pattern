//装饰者模式
满足is-a的关系
对原有的对象进行包装，但还是原来的对象
可以类比IO流，就是典型的包装者模式
FileOutputStream和ObjectOutputStream都继承自OutputStream
这里需要区别的是静态代理，包装模式的确很想静态代理模式，静态代理并不存在is-a的关系不管流在怎么包装它都还是OutputStream对象
而静态代理只是对目标代理对象的功能扩展，并不存在is-a的关系，比如父母帮孩子物色女朋友，仅仅只是扩展了这个找女朋友的方法，并不存在明显的is-a的关系
而装饰者模式就必须要求这种关系的存在，就如Person类来说，不管后期具备什么样的身份和责任，都不能改变它还是Person的这一特性。这就是装饰者模式和静态
代理的最大区别